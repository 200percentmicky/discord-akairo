"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.version = exports.Util = exports.TypeResolver = exports.TaskHandler = exports.Task = exports.ListenerHandler = exports.Listener = exports.InhibitorHandler = exports.Inhibitor = exports.Flag = exports.ContextMenuCommandHandler = exports.ContextMenuCommand = exports.Constants = exports.CommandUtil = exports.CommandHandler = exports.Command = exports.ClientUtil = exports.Category = exports.Argument = exports.AkairoModule = exports.AkairoMessage = exports.AkairoHandler = exports.AkairoError = exports.AkairoClient = void 0;
require("source-map-support/register");
const package_json_1 = __importDefault(require("../package.json"));
const AkairoClient_1 = __importDefault(require("./struct/AkairoClient"));
exports.AkairoClient = AkairoClient_1.default;
const AkairoHandler_1 = __importDefault(require("./struct/AkairoHandler"));
exports.AkairoHandler = AkairoHandler_1.default;
const AkairoModule_1 = __importDefault(require("./struct/AkairoModule"));
exports.AkairoModule = AkairoModule_1.default;
const ClientUtil_1 = __importDefault(require("./struct/ClientUtil"));
exports.ClientUtil = ClientUtil_1.default;
const Argument_1 = __importDefault(require("./struct/commands/arguments/Argument"));
exports.Argument = Argument_1.default;
const TypeResolver_1 = __importDefault(require("./struct/commands/arguments/TypeResolver"));
exports.TypeResolver = TypeResolver_1.default;
const Command_1 = __importDefault(require("./struct/commands/Command"));
exports.Command = Command_1.default;
const CommandHandler_1 = __importDefault(require("./struct/commands/CommandHandler"));
exports.CommandHandler = CommandHandler_1.default;
const CommandUtil_1 = __importDefault(require("./struct/commands/CommandUtil"));
exports.CommandUtil = CommandUtil_1.default;
const Flag_1 = __importDefault(require("./struct/commands/Flag"));
exports.Flag = Flag_1.default;
const ContextMenuCommand_1 = __importDefault(require("./struct/contextMenuCommands/ContextMenuCommand"));
exports.ContextMenuCommand = ContextMenuCommand_1.default;
const ContextMenuCommandHandler_1 = __importDefault(require("./struct/contextMenuCommands/ContextMenuCommandHandler"));
exports.ContextMenuCommandHandler = ContextMenuCommandHandler_1.default;
const Inhibitor_1 = __importDefault(require("./struct/inhibitors/Inhibitor"));
exports.Inhibitor = Inhibitor_1.default;
const InhibitorHandler_1 = __importDefault(require("./struct/inhibitors/InhibitorHandler"));
exports.InhibitorHandler = InhibitorHandler_1.default;
const Listener_1 = __importDefault(require("./struct/listeners/Listener"));
exports.Listener = Listener_1.default;
const ListenerHandler_1 = __importDefault(require("./struct/listeners/ListenerHandler"));
exports.ListenerHandler = ListenerHandler_1.default;
const Task_1 = __importDefault(require("./struct/tasks/Task"));
exports.Task = Task_1.default;
const TaskHandler_1 = __importDefault(require("./struct/tasks/TaskHandler"));
exports.TaskHandler = TaskHandler_1.default;
const AkairoError_1 = __importDefault(require("./util/AkairoError"));
exports.AkairoError = AkairoError_1.default;
const AkairoMessage_1 = __importDefault(require("./util/AkairoMessage"));
exports.AkairoMessage = AkairoMessage_1.default;
const Category_1 = __importDefault(require("./util/Category"));
exports.Category = Category_1.default;
const Constants = __importStar(require("./util/Constants"));
exports.Constants = Constants;
const Util_1 = __importDefault(require("./util/Util"));
exports.Util = Util_1.default;
const version = package_json_1.default.version;
exports.version = version;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHVDQUFxQztBQUNyQyxtRUFBMEM7QUFDMUMseUVBQW9FO0FBa0VuRSx1QkFsRU0sc0JBQVksQ0FrRU47QUFqRWIsMkVBQTRGO0FBbUUzRix3QkFuRU0sdUJBQWEsQ0FtRU47QUFsRWQseUVBQTBFO0FBc0V6RSx1QkF0RU0sc0JBQVksQ0FzRU47QUFyRWIscUVBQTZDO0FBbUY1QyxxQkFuRk0sb0JBQVUsQ0FtRk47QUFsRlgsb0ZBZ0I4QztBQXVEN0MsbUJBdkVNLGtCQUFRLENBdUVOO0FBdERULDRGQUFvRTtBQTRHbkUsdUJBNUdNLHNCQUFZLENBNEdOO0FBM0diLHdFQVFtQztBQXlEbEMsa0JBakVNLGlCQUFPLENBaUVOO0FBeERSLHNGQU8wQztBQWtEekMseUJBekRNLHdCQUFjLENBeUROO0FBakRmLGdGQUF3RDtBQXFEdkQsc0JBckRNLHFCQUFXLENBcUROO0FBcERaLGtFQUEwQztBQThEekMsZUE5RE0sY0FBSSxDQThETjtBQTdETCx5R0FBZ0g7QUFxRC9HLDZCQXJETSw0QkFBa0IsQ0FxRE47QUFwRG5CLHVIQUErRjtBQXFEOUYsb0NBckRNLG1DQUF5QixDQXFETjtBQXBEMUIsOEVBQTRFO0FBOEQzRSxvQkE5RE0sbUJBQVMsQ0E4RE47QUE3RFYsNEZBQW9FO0FBOERuRSwyQkE5RE0sMEJBQWdCLENBOEROO0FBN0RqQiwyRUFBd0U7QUFpRXZFLG1CQWpFTSxrQkFBUSxDQWlFTjtBQWhFVCx5RkFBaUU7QUFpRWhFLDBCQWpFTSx5QkFBZSxDQWlFTjtBQWhFaEIsK0RBQXdEO0FBOEV2RCxlQTlFTSxjQUFJLENBOEVOO0FBN0VMLDZFQUFxRDtBQThFcEQsc0JBOUVNLHFCQUFXLENBOEVOO0FBckVaLHFFQUE2QztBQVU1QyxzQkFWTSxxQkFBVyxDQVVOO0FBVFoseUVBQWlEO0FBYWhELHdCQWJNLHVCQUFhLENBYU47QUFaZCwrREFBdUM7QUEwQnRDLG1CQTFCTSxrQkFBUSxDQTBCTjtBQXpCVCw0REFBOEM7QUFpQzdDLDhCQUFTO0FBaENWLHVEQUErQjtBQXFFOUIsZUFyRU0sY0FBSSxDQXFFTjtBQW5FTCxNQUFNLE9BQU8sR0FBRyxzQkFBVyxDQUFDLE9BQU8sQ0FBQztBQW9FbkMsMEJBQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCJzb3VyY2UtbWFwLXN1cHBvcnQvcmVnaXN0ZXJcIjtcbmltcG9ydCBwYWNrYWdlSlNPTiBmcm9tIFwiLi4vcGFja2FnZS5qc29uXCI7XG5pbXBvcnQgQWthaXJvQ2xpZW50LCB7IEFrYWlyb09wdGlvbnMgfSBmcm9tIFwiLi9zdHJ1Y3QvQWthaXJvQ2xpZW50XCI7XG5pbXBvcnQgQWthaXJvSGFuZGxlciwgeyBBa2Fpcm9IYW5kbGVyT3B0aW9ucywgTG9hZFByZWRpY2F0ZSB9IGZyb20gXCIuL3N0cnVjdC9Ba2Fpcm9IYW5kbGVyXCI7XG5pbXBvcnQgQWthaXJvTW9kdWxlLCB7IEFrYWlyb01vZHVsZU9wdGlvbnMgfSBmcm9tIFwiLi9zdHJ1Y3QvQWthaXJvTW9kdWxlXCI7XG5pbXBvcnQgQ2xpZW50VXRpbCBmcm9tIFwiLi9zdHJ1Y3QvQ2xpZW50VXRpbFwiO1xuaW1wb3J0IEFyZ3VtZW50LCB7XG5cdEFyZ3VtZW50TWF0Y2gsXG5cdEFyZ3VtZW50T3B0aW9ucyxcblx0QXJndW1lbnRQcm9tcHREYXRhLFxuXHRBcmd1bWVudFByb21wdE9wdGlvbnMsXG5cdEFyZ3VtZW50VHlwZSxcblx0QXJndW1lbnRUeXBlQ2FzdGVyLFxuXHRBcmd1bWVudFR5cGVDYXN0ZXJfLFxuXHREZWZhdWx0QXJndW1lbnRPcHRpb25zLFxuXHREZWZhdWx0VmFsdWVTdXBwbGllcixcblx0RmFpbHVyZURhdGEsXG5cdE90aGVyd2lzZUNvbnRlbnRNb2RpZmllcixcblx0T3RoZXJ3aXNlQ29udGVudFN1cHBsaWVyLFxuXHRQYXJzZWRWYWx1ZVByZWRpY2F0ZSxcblx0UHJvbXB0Q29udGVudE1vZGlmaWVyLFxuXHRQcm9tcHRDb250ZW50U3VwcGxpZXJcbn0gZnJvbSBcIi4vc3RydWN0L2NvbW1hbmRzL2FyZ3VtZW50cy9Bcmd1bWVudFwiO1xuaW1wb3J0IFR5cGVSZXNvbHZlciBmcm9tIFwiLi9zdHJ1Y3QvY29tbWFuZHMvYXJndW1lbnRzL1R5cGVSZXNvbHZlclwiO1xuaW1wb3J0IENvbW1hbmQsIHtcblx0QXJndW1lbnRHZW5lcmF0b3IsXG5cdEJlZm9yZUFjdGlvbixcblx0Q29tbWFuZE9wdGlvbnMsXG5cdEV4ZWN1dGlvblByZWRpY2F0ZSxcblx0S2V5U3VwcGxpZXIsXG5cdE1pc3NpbmdQZXJtaXNzaW9uU3VwcGxpZXIsXG5cdFJlZ2V4U3VwcGxpZXJcbn0gZnJvbSBcIi4vc3RydWN0L2NvbW1hbmRzL0NvbW1hbmRcIjtcbmltcG9ydCBDb21tYW5kSGFuZGxlciwge1xuXHRDb21tYW5kSGFuZGxlck9wdGlvbnMsXG5cdENvb2xkb3duRGF0YSxcblx0SWdub3JlQ2hlY2tQcmVkaWNhdGUsXG5cdE1lbnRpb25QcmVmaXhQcmVkaWNhdGUsXG5cdFBhcnNlZENvbXBvbmVudERhdGEsXG5cdFByZWZpeFN1cHBsaWVyXG59IGZyb20gXCIuL3N0cnVjdC9jb21tYW5kcy9Db21tYW5kSGFuZGxlclwiO1xuaW1wb3J0IENvbW1hbmRVdGlsIGZyb20gXCIuL3N0cnVjdC9jb21tYW5kcy9Db21tYW5kVXRpbFwiO1xuaW1wb3J0IEZsYWcgZnJvbSBcIi4vc3RydWN0L2NvbW1hbmRzL0ZsYWdcIjtcbmltcG9ydCBDb250ZXh0TWVudUNvbW1hbmQsIHsgQ29udGV4dE1lbnVDb21tYW5kT3B0aW9ucyB9IGZyb20gXCIuL3N0cnVjdC9jb250ZXh0TWVudUNvbW1hbmRzL0NvbnRleHRNZW51Q29tbWFuZFwiO1xuaW1wb3J0IENvbnRleHRNZW51Q29tbWFuZEhhbmRsZXIgZnJvbSBcIi4vc3RydWN0L2NvbnRleHRNZW51Q29tbWFuZHMvQ29udGV4dE1lbnVDb21tYW5kSGFuZGxlclwiO1xuaW1wb3J0IEluaGliaXRvciwgeyBJbmhpYml0b3JPcHRpb25zIH0gZnJvbSBcIi4vc3RydWN0L2luaGliaXRvcnMvSW5oaWJpdG9yXCI7XG5pbXBvcnQgSW5oaWJpdG9ySGFuZGxlciBmcm9tIFwiLi9zdHJ1Y3QvaW5oaWJpdG9ycy9JbmhpYml0b3JIYW5kbGVyXCI7XG5pbXBvcnQgTGlzdGVuZXIsIHsgTGlzdGVuZXJPcHRpb25zIH0gZnJvbSBcIi4vc3RydWN0L2xpc3RlbmVycy9MaXN0ZW5lclwiO1xuaW1wb3J0IExpc3RlbmVySGFuZGxlciBmcm9tIFwiLi9zdHJ1Y3QvbGlzdGVuZXJzL0xpc3RlbmVySGFuZGxlclwiO1xuaW1wb3J0IFRhc2ssIHsgVGFza09wdGlvbnMgfSBmcm9tIFwiLi9zdHJ1Y3QvdGFza3MvVGFza1wiO1xuaW1wb3J0IFRhc2tIYW5kbGVyIGZyb20gXCIuL3N0cnVjdC90YXNrcy9UYXNrSGFuZGxlclwiO1xuaW1wb3J0IHR5cGUge1xuXHRBa2Fpcm9IYW5kbGVyRXZlbnRzLFxuXHRDb21tYW5kSGFuZGxlckV2ZW50cyxcblx0SW5oaWJpdG9ySGFuZGxlckV2ZW50cyxcblx0TGlzdGVuZXJIYW5kbGVyRXZlbnRzLFxuXHRUYXNrSGFuZGxlckV2ZW50c1xufSBmcm9tIFwiLi90eXBpbmdzL2V2ZW50c1wiO1xuaW1wb3J0IHR5cGUgeyBHdWlsZFRleHRCYXNlZENoYW5uZWxzIH0gZnJvbSBcIi4vdHlwaW5ncy9ndWlsZFRleHRCYXNlZENoYW5uZWxzXCI7XG5pbXBvcnQgQWthaXJvRXJyb3IgZnJvbSBcIi4vdXRpbC9Ba2Fpcm9FcnJvclwiO1xuaW1wb3J0IEFrYWlyb01lc3NhZ2UgZnJvbSBcIi4vdXRpbC9Ba2Fpcm9NZXNzYWdlXCI7XG5pbXBvcnQgQ2F0ZWdvcnkgZnJvbSBcIi4vdXRpbC9DYXRlZ29yeVwiO1xuaW1wb3J0ICogYXMgQ29uc3RhbnRzIGZyb20gXCIuL3V0aWwvQ29uc3RhbnRzXCI7XG5pbXBvcnQgVXRpbCBmcm9tIFwiLi91dGlsL1V0aWxcIjtcblxuY29uc3QgdmVyc2lvbiA9IHBhY2thZ2VKU09OLnZlcnNpb247XG5cbmV4cG9ydCB7XG5cdEFrYWlyb0NsaWVudCxcblx0QWthaXJvRXJyb3IsXG5cdEFrYWlyb0hhbmRsZXIsXG5cdEFrYWlyb0hhbmRsZXJFdmVudHMsXG5cdEFrYWlyb0hhbmRsZXJPcHRpb25zLFxuXHRBa2Fpcm9NZXNzYWdlLFxuXHRBa2Fpcm9Nb2R1bGUsXG5cdEFrYWlyb01vZHVsZU9wdGlvbnMsXG5cdEFrYWlyb09wdGlvbnMsXG5cdEFyZ3VtZW50LFxuXHRBcmd1bWVudEdlbmVyYXRvcixcblx0QXJndW1lbnRNYXRjaCxcblx0QXJndW1lbnRPcHRpb25zLFxuXHRBcmd1bWVudFByb21wdERhdGEsXG5cdEFyZ3VtZW50UHJvbXB0T3B0aW9ucyxcblx0QXJndW1lbnRUeXBlLFxuXHRBcmd1bWVudFR5cGVDYXN0ZXJfLFxuXHRBcmd1bWVudFR5cGVDYXN0ZXIsXG5cdEJlZm9yZUFjdGlvbixcblx0Q2F0ZWdvcnksXG5cdENsaWVudFV0aWwsXG5cdENvbW1hbmQsXG5cdENvbW1hbmRIYW5kbGVyLFxuXHRDb21tYW5kSGFuZGxlckV2ZW50cyxcblx0Q29tbWFuZEhhbmRsZXJPcHRpb25zLFxuXHRDb21tYW5kT3B0aW9ucyxcblx0Q29tbWFuZFV0aWwsXG5cdENvbnN0YW50cyxcblx0Q29udGV4dE1lbnVDb21tYW5kLFxuXHRDb250ZXh0TWVudUNvbW1hbmRIYW5kbGVyLFxuXHRDb250ZXh0TWVudUNvbW1hbmRPcHRpb25zLFxuXHRDb29sZG93bkRhdGEsXG5cdERlZmF1bHRBcmd1bWVudE9wdGlvbnMsXG5cdERlZmF1bHRWYWx1ZVN1cHBsaWVyLFxuXHRFeGVjdXRpb25QcmVkaWNhdGUsXG5cdEZhaWx1cmVEYXRhLFxuXHRGbGFnLFxuXHRHdWlsZFRleHRCYXNlZENoYW5uZWxzLFxuXHRJZ25vcmVDaGVja1ByZWRpY2F0ZSxcblx0SW5oaWJpdG9yLFxuXHRJbmhpYml0b3JIYW5kbGVyLFxuXHRJbmhpYml0b3JIYW5kbGVyRXZlbnRzLFxuXHRJbmhpYml0b3JPcHRpb25zLFxuXHRLZXlTdXBwbGllcixcblx0TGlzdGVuZXIsXG5cdExpc3RlbmVySGFuZGxlcixcblx0TGlzdGVuZXJIYW5kbGVyRXZlbnRzLFxuXHRMaXN0ZW5lck9wdGlvbnMsXG5cdExvYWRQcmVkaWNhdGUsXG5cdE1lbnRpb25QcmVmaXhQcmVkaWNhdGUsXG5cdE1pc3NpbmdQZXJtaXNzaW9uU3VwcGxpZXIsXG5cdE90aGVyd2lzZUNvbnRlbnRNb2RpZmllcixcblx0T3RoZXJ3aXNlQ29udGVudFN1cHBsaWVyLFxuXHRQYXJzZWRDb21wb25lbnREYXRhLFxuXHRQYXJzZWRWYWx1ZVByZWRpY2F0ZSxcblx0UHJlZml4U3VwcGxpZXIsXG5cdFByb21wdENvbnRlbnRNb2RpZmllcixcblx0UHJvbXB0Q29udGVudFN1cHBsaWVyLFxuXHRSZWdleFN1cHBsaWVyLFxuXHRUYXNrLFxuXHRUYXNrSGFuZGxlcixcblx0VGFza0hhbmRsZXJFdmVudHMsXG5cdFRhc2tPcHRpb25zLFxuXHRUeXBlUmVzb2x2ZXIsXG5cdFV0aWwsXG5cdHZlcnNpb25cbn07XG4iXX0=