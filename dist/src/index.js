"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.version = exports.Util = exports.TypeResolver = exports.TaskHandler = exports.Task = exports.ListenerHandler = exports.Listener = exports.InhibitorHandler = exports.Inhibitor = exports.Flag = exports.Constants = exports.CommandUtil = exports.CommandHandler = exports.Command = exports.ClientUtil = exports.Category = exports.Argument = exports.AkairoModule = exports.AkairoMessage = exports.AkairoHandler = exports.AkairoError = exports.AkairoClient = void 0;
require("discord-akairo-message-util");
require("source-map-support/register");
const package_json_1 = __importDefault(require("../package.json"));
const AkairoClient_1 = __importDefault(require("./struct/AkairoClient"));
exports.AkairoClient = AkairoClient_1.default;
const AkairoHandler_1 = __importDefault(require("./struct/AkairoHandler"));
exports.AkairoHandler = AkairoHandler_1.default;
const AkairoModule_1 = __importDefault(require("./struct/AkairoModule"));
exports.AkairoModule = AkairoModule_1.default;
const ClientUtil_1 = __importDefault(require("./struct/ClientUtil"));
exports.ClientUtil = ClientUtil_1.default;
const Argument_1 = __importDefault(require("./struct/commands/arguments/Argument"));
exports.Argument = Argument_1.default;
const TypeResolver_1 = __importDefault(require("./struct/commands/arguments/TypeResolver"));
exports.TypeResolver = TypeResolver_1.default;
const Command_1 = __importDefault(require("./struct/commands/Command"));
exports.Command = Command_1.default;
const CommandHandler_1 = __importDefault(require("./struct/commands/CommandHandler"));
exports.CommandHandler = CommandHandler_1.default;
const CommandUtil_1 = __importDefault(require("./struct/commands/CommandUtil"));
exports.CommandUtil = CommandUtil_1.default;
const Flag_1 = __importDefault(require("./struct/commands/Flag"));
exports.Flag = Flag_1.default;
const Inhibitor_1 = __importDefault(require("./struct/inhibitors/Inhibitor"));
exports.Inhibitor = Inhibitor_1.default;
const InhibitorHandler_1 = __importDefault(require("./struct/inhibitors/InhibitorHandler"));
exports.InhibitorHandler = InhibitorHandler_1.default;
const Listener_1 = __importDefault(require("./struct/listeners/Listener"));
exports.Listener = Listener_1.default;
const ListenerHandler_1 = __importDefault(require("./struct/listeners/ListenerHandler"));
exports.ListenerHandler = ListenerHandler_1.default;
const Task_1 = __importDefault(require("./struct/tasks/Task"));
exports.Task = Task_1.default;
const TaskHandler_1 = __importDefault(require("./struct/tasks/TaskHandler"));
exports.TaskHandler = TaskHandler_1.default;
const AkairoError_1 = __importDefault(require("./util/AkairoError"));
exports.AkairoError = AkairoError_1.default;
const AkairoMessage_1 = __importDefault(require("./util/AkairoMessage"));
exports.AkairoMessage = AkairoMessage_1.default;
const Category_1 = __importDefault(require("./util/Category"));
exports.Category = Category_1.default;
const Constants = __importStar(require("./util/Constants"));
exports.Constants = Constants;
const Util_1 = __importDefault(require("./util/Util"));
exports.Util = Util_1.default;
const version = package_json_1.default.version;
exports.version = version;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHVDQUFxQztBQUNyQyx1Q0FBcUM7QUFDckMsbUVBQTBDO0FBQzFDLHlFQUFvRTtBQW1FbkUsdUJBbkVNLHNCQUFZLENBbUVOO0FBbEViLDJFQUdnQztBQWlFL0Isd0JBcEVNLHVCQUFhLENBb0VOO0FBaEVkLHlFQUEwRTtBQW9FekUsdUJBcEVNLHNCQUFZLENBb0VOO0FBbkViLHFFQUE2QztBQWlGNUMscUJBakZNLG9CQUFVLENBaUZOO0FBaEZYLG9GQWdCOEM7QUFxRDdDLG1CQXJFTSxrQkFBUSxDQXFFTjtBQXBEVCw0RkFBb0U7QUF1R25FLHVCQXZHTSxzQkFBWSxDQXVHTjtBQXRHYix3RUFRbUM7QUF1RGxDLGtCQS9ETSxpQkFBTyxDQStETjtBQXREUixzRkFPMEM7QUFnRHpDLHlCQXZETSx3QkFBYyxDQXVETjtBQS9DZixnRkFBd0Q7QUFtRHZELHNCQW5ETSxxQkFBVyxDQW1ETjtBQWxEWixrRUFBMEM7QUF5RHpDLGVBekRNLGNBQUksQ0F5RE47QUF4REwsOEVBQTRFO0FBMkQzRSxvQkEzRE0sbUJBQVMsQ0EyRE47QUExRFYsNEZBQW9FO0FBMkRuRSwyQkEzRE0sMEJBQWdCLENBMkROO0FBMURqQiwyRUFBd0U7QUE4RHZFLG1CQTlETSxrQkFBUSxDQThETjtBQTdEVCx5RkFBaUU7QUE4RGhFLDBCQTlETSx5QkFBZSxDQThETjtBQTdEaEIsK0RBQXdEO0FBMkV2RCxlQTNFTSxjQUFJLENBMkVOO0FBMUVMLDZFQUFxRDtBQTJFcEQsc0JBM0VNLHFCQUFXLENBMkVOO0FBbEVaLHFFQUE2QztBQVU1QyxzQkFWTSxxQkFBVyxDQVVOO0FBVFoseUVBQWlEO0FBYWhELHdCQWJNLHVCQUFhLENBYU47QUFaZCwrREFBdUM7QUEwQnRDLG1CQTFCTSxrQkFBUSxDQTBCTjtBQXpCVCw0REFBOEM7QUFpQzdDLDhCQUFTO0FBaENWLHVEQUErQjtBQWtFOUIsZUFsRU0sY0FBSSxDQWtFTjtBQWhFTCxNQUFNLE9BQU8sR0FBRyxzQkFBVyxDQUFDLE9BQU8sQ0FBQztBQWlFbkMsMEJBQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCJkaXNjb3JkLWFrYWlyby1tZXNzYWdlLXV0aWxcIjtcbmltcG9ydCBcInNvdXJjZS1tYXAtc3VwcG9ydC9yZWdpc3RlclwiO1xuaW1wb3J0IHBhY2thZ2VKU09OIGZyb20gXCIuLi9wYWNrYWdlLmpzb25cIjtcbmltcG9ydCBBa2Fpcm9DbGllbnQsIHsgQWthaXJvT3B0aW9ucyB9IGZyb20gXCIuL3N0cnVjdC9Ba2Fpcm9DbGllbnRcIjtcbmltcG9ydCBBa2Fpcm9IYW5kbGVyLCB7XG5cdEFrYWlyb0hhbmRsZXJPcHRpb25zLFxuXHRMb2FkUHJlZGljYXRlXG59IGZyb20gXCIuL3N0cnVjdC9Ba2Fpcm9IYW5kbGVyXCI7XG5pbXBvcnQgQWthaXJvTW9kdWxlLCB7IEFrYWlyb01vZHVsZU9wdGlvbnMgfSBmcm9tIFwiLi9zdHJ1Y3QvQWthaXJvTW9kdWxlXCI7XG5pbXBvcnQgQ2xpZW50VXRpbCBmcm9tIFwiLi9zdHJ1Y3QvQ2xpZW50VXRpbFwiO1xuaW1wb3J0IEFyZ3VtZW50LCB7XG5cdEFyZ3VtZW50TWF0Y2gsXG5cdEFyZ3VtZW50T3B0aW9ucyxcblx0QXJndW1lbnRQcm9tcHREYXRhLFxuXHRBcmd1bWVudFByb21wdE9wdGlvbnMsXG5cdEFyZ3VtZW50VHlwZSxcblx0QXJndW1lbnRUeXBlQ2FzdGVyLFxuXHRBcmd1bWVudFR5cGVDYXN0ZXJfLFxuXHREZWZhdWx0QXJndW1lbnRPcHRpb25zLFxuXHREZWZhdWx0VmFsdWVTdXBwbGllcixcblx0RmFpbHVyZURhdGEsXG5cdE90aGVyd2lzZUNvbnRlbnRNb2RpZmllcixcblx0T3RoZXJ3aXNlQ29udGVudFN1cHBsaWVyLFxuXHRQYXJzZWRWYWx1ZVByZWRpY2F0ZSxcblx0UHJvbXB0Q29udGVudE1vZGlmaWVyLFxuXHRQcm9tcHRDb250ZW50U3VwcGxpZXJcbn0gZnJvbSBcIi4vc3RydWN0L2NvbW1hbmRzL2FyZ3VtZW50cy9Bcmd1bWVudFwiO1xuaW1wb3J0IFR5cGVSZXNvbHZlciBmcm9tIFwiLi9zdHJ1Y3QvY29tbWFuZHMvYXJndW1lbnRzL1R5cGVSZXNvbHZlclwiO1xuaW1wb3J0IENvbW1hbmQsIHtcblx0QXJndW1lbnRHZW5lcmF0b3IsXG5cdEJlZm9yZUFjdGlvbixcblx0Q29tbWFuZE9wdGlvbnMsXG5cdEV4ZWN1dGlvblByZWRpY2F0ZSxcblx0S2V5U3VwcGxpZXIsXG5cdE1pc3NpbmdQZXJtaXNzaW9uU3VwcGxpZXIsXG5cdFJlZ2V4U3VwcGxpZXJcbn0gZnJvbSBcIi4vc3RydWN0L2NvbW1hbmRzL0NvbW1hbmRcIjtcbmltcG9ydCBDb21tYW5kSGFuZGxlciwge1xuXHRDb21tYW5kSGFuZGxlck9wdGlvbnMsXG5cdENvb2xkb3duRGF0YSxcblx0SWdub3JlQ2hlY2tQcmVkaWNhdGUsXG5cdE1lbnRpb25QcmVmaXhQcmVkaWNhdGUsXG5cdFBhcnNlZENvbXBvbmVudERhdGEsXG5cdFByZWZpeFN1cHBsaWVyXG59IGZyb20gXCIuL3N0cnVjdC9jb21tYW5kcy9Db21tYW5kSGFuZGxlclwiO1xuaW1wb3J0IENvbW1hbmRVdGlsIGZyb20gXCIuL3N0cnVjdC9jb21tYW5kcy9Db21tYW5kVXRpbFwiO1xuaW1wb3J0IEZsYWcgZnJvbSBcIi4vc3RydWN0L2NvbW1hbmRzL0ZsYWdcIjtcbmltcG9ydCBJbmhpYml0b3IsIHsgSW5oaWJpdG9yT3B0aW9ucyB9IGZyb20gXCIuL3N0cnVjdC9pbmhpYml0b3JzL0luaGliaXRvclwiO1xuaW1wb3J0IEluaGliaXRvckhhbmRsZXIgZnJvbSBcIi4vc3RydWN0L2luaGliaXRvcnMvSW5oaWJpdG9ySGFuZGxlclwiO1xuaW1wb3J0IExpc3RlbmVyLCB7IExpc3RlbmVyT3B0aW9ucyB9IGZyb20gXCIuL3N0cnVjdC9saXN0ZW5lcnMvTGlzdGVuZXJcIjtcbmltcG9ydCBMaXN0ZW5lckhhbmRsZXIgZnJvbSBcIi4vc3RydWN0L2xpc3RlbmVycy9MaXN0ZW5lckhhbmRsZXJcIjtcbmltcG9ydCBUYXNrLCB7IFRhc2tPcHRpb25zIH0gZnJvbSBcIi4vc3RydWN0L3Rhc2tzL1Rhc2tcIjtcbmltcG9ydCBUYXNrSGFuZGxlciBmcm9tIFwiLi9zdHJ1Y3QvdGFza3MvVGFza0hhbmRsZXJcIjtcbmltcG9ydCB0eXBlIHtcblx0QWthaXJvSGFuZGxlckV2ZW50cyxcblx0Q29tbWFuZEhhbmRsZXJFdmVudHMsXG5cdEluaGliaXRvckhhbmRsZXJFdmVudHMsXG5cdExpc3RlbmVySGFuZGxlckV2ZW50cyxcblx0VGFza0hhbmRsZXJFdmVudHNcbn0gZnJvbSBcIi4vdHlwaW5ncy9ldmVudHNcIjtcbmltcG9ydCB0eXBlIHsgR3VpbGRUZXh0QmFzZWRDaGFubmVscyB9IGZyb20gXCIuL3R5cGluZ3MvZ3VpbGRUZXh0QmFzZWRDaGFubmVsc1wiO1xuaW1wb3J0IEFrYWlyb0Vycm9yIGZyb20gXCIuL3V0aWwvQWthaXJvRXJyb3JcIjtcbmltcG9ydCBBa2Fpcm9NZXNzYWdlIGZyb20gXCIuL3V0aWwvQWthaXJvTWVzc2FnZVwiO1xuaW1wb3J0IENhdGVnb3J5IGZyb20gXCIuL3V0aWwvQ2F0ZWdvcnlcIjtcbmltcG9ydCAqIGFzIENvbnN0YW50cyBmcm9tIFwiLi91dGlsL0NvbnN0YW50c1wiO1xuaW1wb3J0IFV0aWwgZnJvbSBcIi4vdXRpbC9VdGlsXCI7XG5cbmNvbnN0IHZlcnNpb24gPSBwYWNrYWdlSlNPTi52ZXJzaW9uO1xuXG5leHBvcnQge1xuXHRBa2Fpcm9DbGllbnQsXG5cdEFrYWlyb0Vycm9yLFxuXHRBa2Fpcm9IYW5kbGVyLFxuXHRBa2Fpcm9IYW5kbGVyRXZlbnRzLFxuXHRBa2Fpcm9IYW5kbGVyT3B0aW9ucyxcblx0QWthaXJvTWVzc2FnZSxcblx0QWthaXJvTW9kdWxlLFxuXHRBa2Fpcm9Nb2R1bGVPcHRpb25zLFxuXHRBa2Fpcm9PcHRpb25zLFxuXHRBcmd1bWVudCxcblx0QXJndW1lbnRHZW5lcmF0b3IsXG5cdEFyZ3VtZW50TWF0Y2gsXG5cdEFyZ3VtZW50T3B0aW9ucyxcblx0QXJndW1lbnRQcm9tcHREYXRhLFxuXHRBcmd1bWVudFByb21wdE9wdGlvbnMsXG5cdEFyZ3VtZW50VHlwZSxcblx0QXJndW1lbnRUeXBlQ2FzdGVyXyxcblx0QXJndW1lbnRUeXBlQ2FzdGVyLFxuXHRCZWZvcmVBY3Rpb24sXG5cdENhdGVnb3J5LFxuXHRDbGllbnRVdGlsLFxuXHRDb21tYW5kLFxuXHRDb21tYW5kSGFuZGxlcixcblx0Q29tbWFuZEhhbmRsZXJFdmVudHMsXG5cdENvbW1hbmRIYW5kbGVyT3B0aW9ucyxcblx0Q29tbWFuZE9wdGlvbnMsXG5cdENvbW1hbmRVdGlsLFxuXHRDb25zdGFudHMsXG5cdENvb2xkb3duRGF0YSxcblx0RGVmYXVsdEFyZ3VtZW50T3B0aW9ucyxcblx0RGVmYXVsdFZhbHVlU3VwcGxpZXIsXG5cdEV4ZWN1dGlvblByZWRpY2F0ZSxcblx0RmFpbHVyZURhdGEsXG5cdEZsYWcsXG5cdEd1aWxkVGV4dEJhc2VkQ2hhbm5lbHMsXG5cdElnbm9yZUNoZWNrUHJlZGljYXRlLFxuXHRJbmhpYml0b3IsXG5cdEluaGliaXRvckhhbmRsZXIsXG5cdEluaGliaXRvckhhbmRsZXJFdmVudHMsXG5cdEluaGliaXRvck9wdGlvbnMsXG5cdEtleVN1cHBsaWVyLFxuXHRMaXN0ZW5lcixcblx0TGlzdGVuZXJIYW5kbGVyLFxuXHRMaXN0ZW5lckhhbmRsZXJFdmVudHMsXG5cdExpc3RlbmVyT3B0aW9ucyxcblx0TG9hZFByZWRpY2F0ZSxcblx0TWVudGlvblByZWZpeFByZWRpY2F0ZSxcblx0TWlzc2luZ1Blcm1pc3Npb25TdXBwbGllcixcblx0T3RoZXJ3aXNlQ29udGVudE1vZGlmaWVyLFxuXHRPdGhlcndpc2VDb250ZW50U3VwcGxpZXIsXG5cdFBhcnNlZENvbXBvbmVudERhdGEsXG5cdFBhcnNlZFZhbHVlUHJlZGljYXRlLFxuXHRQcmVmaXhTdXBwbGllcixcblx0UHJvbXB0Q29udGVudE1vZGlmaWVyLFxuXHRQcm9tcHRDb250ZW50U3VwcGxpZXIsXG5cdFJlZ2V4U3VwcGxpZXIsXG5cdFRhc2ssXG5cdFRhc2tIYW5kbGVyLFxuXHRUYXNrSGFuZGxlckV2ZW50cyxcblx0VGFza09wdGlvbnMsXG5cdFR5cGVSZXNvbHZlcixcblx0VXRpbCxcblx0dmVyc2lvblxufTtcbiJdfQ==