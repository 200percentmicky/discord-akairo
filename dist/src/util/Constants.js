"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BuiltInReasons = exports.ContextCommandHandlerEvents = exports.CommandHandlerEvents = exports.AkairoHandlerEvents = exports.ArgumentTypes = exports.ArgumentMatches = void 0;
var ArgumentMatches;
(function (ArgumentMatches) {
    ArgumentMatches["PHRASE"] = "phrase";
    ArgumentMatches["FLAG"] = "flag";
    ArgumentMatches["OPTION"] = "option";
    ArgumentMatches["REST"] = "rest";
    ArgumentMatches["SEPARATE"] = "separate";
    ArgumentMatches["TEXT"] = "text";
    ArgumentMatches["CONTENT"] = "content";
    ArgumentMatches["REST_CONTENT"] = "restContent";
    ArgumentMatches["NONE"] = "none";
})(ArgumentMatches = exports.ArgumentMatches || (exports.ArgumentMatches = {}));
var ArgumentTypes;
(function (ArgumentTypes) {
    ArgumentTypes["STRING"] = "string";
    ArgumentTypes["LOWERCASE"] = "lowercase";
    ArgumentTypes["UPPERCASE"] = "uppercase";
    ArgumentTypes["CHAR_CODES"] = "charCodes";
    ArgumentTypes["NUMBER"] = "number";
    ArgumentTypes["INTEGER"] = "integer";
    ArgumentTypes["BIGINT"] = "bigint";
    ArgumentTypes["EMOJINT"] = "emojint";
    ArgumentTypes["URL"] = "url";
    ArgumentTypes["DATE"] = "date";
    ArgumentTypes["COLOR"] = "color";
    ArgumentTypes["USER"] = "user";
    ArgumentTypes["USERS"] = "users";
    ArgumentTypes["MEMBER"] = "member";
    ArgumentTypes["MEMBERS"] = "members";
    ArgumentTypes["RELEVANT"] = "relevant";
    ArgumentTypes["RELEVANTS"] = "relevants";
    ArgumentTypes["CHANNEL"] = "channel";
    ArgumentTypes["CHANNELS"] = "channels";
    ArgumentTypes["TEXT_CHANNEL"] = "textChannel";
    ArgumentTypes["TEXT_CHANNELS"] = "textChannels";
    ArgumentTypes["VOICE_CHANNEL"] = "voiceChannel";
    ArgumentTypes["VOICE_CHANNELS"] = "voiceChannels";
    ArgumentTypes["CATEGORY_CHANNEL"] = "categoryChannel";
    ArgumentTypes["CATEGORY_CHANNELS"] = "categoryChannels";
    ArgumentTypes["NEWS_CHANNEL"] = "newsChannel";
    ArgumentTypes["NEWS_CHANNELS"] = "newsChannels";
    ArgumentTypes["STORE_CHANNEL"] = "storeChannel";
    ArgumentTypes["STORE_CHANNELS"] = "storeChannels";
    ArgumentTypes["STAGE_CHANNEL"] = "stageChannel";
    ArgumentTypes["STAGE_CHANNELS"] = "stageChannels";
    ArgumentTypes["THREAD_CHANNEL"] = "threadChannel";
    ArgumentTypes["THREAD_CHANNELS"] = "threadChannels";
    ArgumentTypes["ROLE"] = "role";
    ArgumentTypes["ROLES"] = "roles";
    ArgumentTypes["EMOJI"] = "emoji";
    ArgumentTypes["EMOJIS"] = "emojis";
    ArgumentTypes["GUILD"] = "guild";
    ArgumentTypes["GUILDS"] = "guilds";
    ArgumentTypes["MESSAGE"] = "message";
    ArgumentTypes["GUILD_MESSAGE"] = "guildMessage";
    ArgumentTypes["RELEVANT_MESSAGE"] = "relevantMessage";
    ArgumentTypes["INVITE"] = "invite";
    ArgumentTypes["USER_MENTION"] = "userMention";
    ArgumentTypes["MEMBER_MENTION"] = "memberMention";
    ArgumentTypes["CHANNEL_MENTION"] = "channelMention";
    ArgumentTypes["ROLE_MENTION"] = "roleMention";
    ArgumentTypes["EMOJI_MENTION"] = "emojiMention";
    ArgumentTypes["COMMAND_ALIAS"] = "commandAlias";
    ArgumentTypes["COMMAND"] = "command";
    ArgumentTypes["INHIBITOR"] = "inhibitor";
    ArgumentTypes["LISTENER"] = "listener";
    ArgumentTypes["TASK"] = "task";
    ArgumentTypes["CONTEXT_MENU_COMMAND"] = "contextMenuCommand";
})(ArgumentTypes = exports.ArgumentTypes || (exports.ArgumentTypes = {}));
var AkairoHandlerEvents;
(function (AkairoHandlerEvents) {
    AkairoHandlerEvents["LOAD"] = "load";
    AkairoHandlerEvents["REMOVE"] = "remove";
})(AkairoHandlerEvents = exports.AkairoHandlerEvents || (exports.AkairoHandlerEvents = {}));
var CommandHandlerEvents;
(function (CommandHandlerEvents) {
    CommandHandlerEvents["COMMAND_BLOCKED"] = "commandBlocked";
    CommandHandlerEvents["COMMAND_BREAKOUT"] = "commandBreakout";
    CommandHandlerEvents["COMMAND_CANCELLED"] = "commandCancelled";
    CommandHandlerEvents["COMMAND_FINISHED"] = "commandFinished";
    CommandHandlerEvents["COMMAND_INVALID"] = "commandInvalid";
    CommandHandlerEvents["COMMAND_LOCKED"] = "commandLocked";
    CommandHandlerEvents["COMMAND_STARTED"] = "commandStarted";
    CommandHandlerEvents["COOLDOWN"] = "cooldown";
    CommandHandlerEvents["ERROR"] = "error";
    CommandHandlerEvents["IN_PROMPT"] = "inPrompt";
    CommandHandlerEvents["MESSAGE_BLOCKED"] = "messageBlocked";
    CommandHandlerEvents["MESSAGE_INVALID"] = "messageInvalid";
    CommandHandlerEvents["MISSING_PERMISSIONS"] = "missingPermissions";
    CommandHandlerEvents["SLASH_BLOCKED"] = "slashBlocked";
    CommandHandlerEvents["SLASH_ERROR"] = "slashError";
    CommandHandlerEvents["SLASH_FINISHED"] = "slashFinished";
    CommandHandlerEvents["SLASH_MISSING_PERMISSIONS"] = "slashMissingPermissions";
    CommandHandlerEvents["SLASH_NOT_FOUND"] = "slashNotFound";
    CommandHandlerEvents["SLASH_STARTED"] = "slashStarted";
    CommandHandlerEvents["SLASH_ONLY"] = "slashOnly";
})(CommandHandlerEvents = exports.CommandHandlerEvents || (exports.CommandHandlerEvents = {}));
var ContextCommandHandlerEvents;
(function (ContextCommandHandlerEvents) {
    ContextCommandHandlerEvents["ERROR"] = "error";
    ContextCommandHandlerEvents["FINISHED"] = "finished";
    ContextCommandHandlerEvents["NOT_FOUND"] = "notFound";
    ContextCommandHandlerEvents["STARTED"] = "started";
    ContextCommandHandlerEvents["BLOCKED"] = "blocked";
})(ContextCommandHandlerEvents = exports.ContextCommandHandlerEvents || (exports.ContextCommandHandlerEvents = {}));
var BuiltInReasons;
(function (BuiltInReasons) {
    BuiltInReasons["CLIENT"] = "client";
    BuiltInReasons["BOT"] = "bot";
    BuiltInReasons["OWNER"] = "owner";
    BuiltInReasons["SUPER_USER"] = "superUser";
    BuiltInReasons["GUILD"] = "guild";
    BuiltInReasons["DM"] = "dm";
    BuiltInReasons["AUTHOR_NOT_FOUND"] = "authorNotFound";
    BuiltInReasons["NOT_NSFW"] = "notNsfw";
})(BuiltInReasons = exports.BuiltInReasons || (exports.BuiltInReasons = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvQ29uc3RhbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLElBQVksZUFVWDtBQVZELFdBQVksZUFBZTtJQUMxQixvQ0FBaUIsQ0FBQTtJQUNqQixnQ0FBYSxDQUFBO0lBQ2Isb0NBQWlCLENBQUE7SUFDakIsZ0NBQWEsQ0FBQTtJQUNiLHdDQUFxQixDQUFBO0lBQ3JCLGdDQUFhLENBQUE7SUFDYixzQ0FBbUIsQ0FBQTtJQUNuQiwrQ0FBNEIsQ0FBQTtJQUM1QixnQ0FBYSxDQUFBO0FBQ2QsQ0FBQyxFQVZXLGVBQWUsR0FBZix1QkFBZSxLQUFmLHVCQUFlLFFBVTFCO0FBQ0QsSUFBWSxhQXVEWDtBQXZERCxXQUFZLGFBQWE7SUFDeEIsa0NBQWlCLENBQUE7SUFDakIsd0NBQXVCLENBQUE7SUFDdkIsd0NBQXVCLENBQUE7SUFDdkIseUNBQXdCLENBQUE7SUFDeEIsa0NBQWlCLENBQUE7SUFDakIsb0NBQW1CLENBQUE7SUFDbkIsa0NBQWlCLENBQUE7SUFDakIsb0NBQW1CLENBQUE7SUFDbkIsNEJBQVcsQ0FBQTtJQUNYLDhCQUFhLENBQUE7SUFDYixnQ0FBZSxDQUFBO0lBQ2YsOEJBQWEsQ0FBQTtJQUNiLGdDQUFlLENBQUE7SUFDZixrQ0FBaUIsQ0FBQTtJQUNqQixvQ0FBbUIsQ0FBQTtJQUNuQixzQ0FBcUIsQ0FBQTtJQUNyQix3Q0FBdUIsQ0FBQTtJQUN2QixvQ0FBbUIsQ0FBQTtJQUNuQixzQ0FBcUIsQ0FBQTtJQUNyQiw2Q0FBNEIsQ0FBQTtJQUM1QiwrQ0FBOEIsQ0FBQTtJQUM5QiwrQ0FBOEIsQ0FBQTtJQUM5QixpREFBZ0MsQ0FBQTtJQUNoQyxxREFBb0MsQ0FBQTtJQUNwQyx1REFBc0MsQ0FBQTtJQUN0Qyw2Q0FBNEIsQ0FBQTtJQUM1QiwrQ0FBOEIsQ0FBQTtJQUM5QiwrQ0FBOEIsQ0FBQTtJQUM5QixpREFBZ0MsQ0FBQTtJQUNoQywrQ0FBOEIsQ0FBQTtJQUM5QixpREFBZ0MsQ0FBQTtJQUNoQyxpREFBZ0MsQ0FBQTtJQUNoQyxtREFBa0MsQ0FBQTtJQUNsQyw4QkFBYSxDQUFBO0lBQ2IsZ0NBQWUsQ0FBQTtJQUNmLGdDQUFlLENBQUE7SUFDZixrQ0FBaUIsQ0FBQTtJQUNqQixnQ0FBZSxDQUFBO0lBQ2Ysa0NBQWlCLENBQUE7SUFDakIsb0NBQW1CLENBQUE7SUFDbkIsK0NBQThCLENBQUE7SUFDOUIscURBQW9DLENBQUE7SUFDcEMsa0NBQWlCLENBQUE7SUFDakIsNkNBQTRCLENBQUE7SUFDNUIsaURBQWdDLENBQUE7SUFDaEMsbURBQWtDLENBQUE7SUFDbEMsNkNBQTRCLENBQUE7SUFDNUIsK0NBQThCLENBQUE7SUFDOUIsK0NBQThCLENBQUE7SUFDOUIsb0NBQW1CLENBQUE7SUFDbkIsd0NBQXVCLENBQUE7SUFDdkIsc0NBQXFCLENBQUE7SUFDckIsOEJBQWEsQ0FBQTtJQUNiLDREQUEyQyxDQUFBO0FBQzVDLENBQUMsRUF2RFcsYUFBYSxHQUFiLHFCQUFhLEtBQWIscUJBQWEsUUF1RHhCO0FBQ0QsSUFBWSxtQkFHWDtBQUhELFdBQVksbUJBQW1CO0lBQzlCLG9DQUFhLENBQUE7SUFDYix3Q0FBaUIsQ0FBQTtBQUNsQixDQUFDLEVBSFcsbUJBQW1CLEdBQW5CLDJCQUFtQixLQUFuQiwyQkFBbUIsUUFHOUI7QUFDRCxJQUFZLG9CQXFCWDtBQXJCRCxXQUFZLG9CQUFvQjtJQUMvQiwwREFBa0MsQ0FBQTtJQUNsQyw0REFBb0MsQ0FBQTtJQUNwQyw4REFBc0MsQ0FBQTtJQUN0Qyw0REFBb0MsQ0FBQTtJQUNwQywwREFBa0MsQ0FBQTtJQUNsQyx3REFBZ0MsQ0FBQTtJQUNoQywwREFBa0MsQ0FBQTtJQUNsQyw2Q0FBcUIsQ0FBQTtJQUNyQix1Q0FBZSxDQUFBO0lBQ2YsOENBQXNCLENBQUE7SUFDdEIsMERBQWtDLENBQUE7SUFDbEMsMERBQWtDLENBQUE7SUFDbEMsa0VBQTBDLENBQUE7SUFDMUMsc0RBQThCLENBQUE7SUFDOUIsa0RBQTBCLENBQUE7SUFDMUIsd0RBQWdDLENBQUE7SUFDaEMsNkVBQXFELENBQUE7SUFDckQseURBQWlDLENBQUE7SUFDakMsc0RBQThCLENBQUE7SUFDOUIsZ0RBQXdCLENBQUE7QUFDekIsQ0FBQyxFQXJCVyxvQkFBb0IsR0FBcEIsNEJBQW9CLEtBQXBCLDRCQUFvQixRQXFCL0I7QUFDRCxJQUFZLDJCQU1YO0FBTkQsV0FBWSwyQkFBMkI7SUFDdEMsOENBQWUsQ0FBQTtJQUNmLG9EQUFxQixDQUFBO0lBQ3JCLHFEQUFzQixDQUFBO0lBQ3RCLGtEQUFtQixDQUFBO0lBQ25CLGtEQUFtQixDQUFBO0FBQ3BCLENBQUMsRUFOVywyQkFBMkIsR0FBM0IsbUNBQTJCLEtBQTNCLG1DQUEyQixRQU10QztBQUNELElBQVksY0FTWDtBQVRELFdBQVksY0FBYztJQUN6QixtQ0FBaUIsQ0FBQTtJQUNqQiw2QkFBVyxDQUFBO0lBQ1gsaUNBQWUsQ0FBQTtJQUNmLDBDQUF3QixDQUFBO0lBQ3hCLGlDQUFlLENBQUE7SUFDZiwyQkFBUyxDQUFBO0lBQ1QscURBQW1DLENBQUE7SUFDbkMsc0NBQW9CLENBQUE7QUFDckIsQ0FBQyxFQVRXLGNBQWMsR0FBZCxzQkFBYyxLQUFkLHNCQUFjLFFBU3pCIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGVudW0gQXJndW1lbnRNYXRjaGVzIHtcblx0UEhSQVNFID0gXCJwaHJhc2VcIixcblx0RkxBRyA9IFwiZmxhZ1wiLFxuXHRPUFRJT04gPSBcIm9wdGlvblwiLFxuXHRSRVNUID0gXCJyZXN0XCIsXG5cdFNFUEFSQVRFID0gXCJzZXBhcmF0ZVwiLFxuXHRURVhUID0gXCJ0ZXh0XCIsXG5cdENPTlRFTlQgPSBcImNvbnRlbnRcIixcblx0UkVTVF9DT05URU5UID0gXCJyZXN0Q29udGVudFwiLFxuXHROT05FID0gXCJub25lXCJcbn1cbmV4cG9ydCBlbnVtIEFyZ3VtZW50VHlwZXMge1xuXHRTVFJJTkcgPSBcInN0cmluZ1wiLFxuXHRMT1dFUkNBU0UgPSBcImxvd2VyY2FzZVwiLFxuXHRVUFBFUkNBU0UgPSBcInVwcGVyY2FzZVwiLFxuXHRDSEFSX0NPREVTID0gXCJjaGFyQ29kZXNcIixcblx0TlVNQkVSID0gXCJudW1iZXJcIixcblx0SU5URUdFUiA9IFwiaW50ZWdlclwiLFxuXHRCSUdJTlQgPSBcImJpZ2ludFwiLFxuXHRFTU9KSU5UID0gXCJlbW9qaW50XCIsXG5cdFVSTCA9IFwidXJsXCIsXG5cdERBVEUgPSBcImRhdGVcIixcblx0Q09MT1IgPSBcImNvbG9yXCIsXG5cdFVTRVIgPSBcInVzZXJcIixcblx0VVNFUlMgPSBcInVzZXJzXCIsXG5cdE1FTUJFUiA9IFwibWVtYmVyXCIsXG5cdE1FTUJFUlMgPSBcIm1lbWJlcnNcIixcblx0UkVMRVZBTlQgPSBcInJlbGV2YW50XCIsXG5cdFJFTEVWQU5UUyA9IFwicmVsZXZhbnRzXCIsXG5cdENIQU5ORUwgPSBcImNoYW5uZWxcIixcblx0Q0hBTk5FTFMgPSBcImNoYW5uZWxzXCIsXG5cdFRFWFRfQ0hBTk5FTCA9IFwidGV4dENoYW5uZWxcIixcblx0VEVYVF9DSEFOTkVMUyA9IFwidGV4dENoYW5uZWxzXCIsXG5cdFZPSUNFX0NIQU5ORUwgPSBcInZvaWNlQ2hhbm5lbFwiLFxuXHRWT0lDRV9DSEFOTkVMUyA9IFwidm9pY2VDaGFubmVsc1wiLFxuXHRDQVRFR09SWV9DSEFOTkVMID0gXCJjYXRlZ29yeUNoYW5uZWxcIixcblx0Q0FURUdPUllfQ0hBTk5FTFMgPSBcImNhdGVnb3J5Q2hhbm5lbHNcIixcblx0TkVXU19DSEFOTkVMID0gXCJuZXdzQ2hhbm5lbFwiLFxuXHRORVdTX0NIQU5ORUxTID0gXCJuZXdzQ2hhbm5lbHNcIixcblx0U1RPUkVfQ0hBTk5FTCA9IFwic3RvcmVDaGFubmVsXCIsXG5cdFNUT1JFX0NIQU5ORUxTID0gXCJzdG9yZUNoYW5uZWxzXCIsXG5cdFNUQUdFX0NIQU5ORUwgPSBcInN0YWdlQ2hhbm5lbFwiLFxuXHRTVEFHRV9DSEFOTkVMUyA9IFwic3RhZ2VDaGFubmVsc1wiLFxuXHRUSFJFQURfQ0hBTk5FTCA9IFwidGhyZWFkQ2hhbm5lbFwiLFxuXHRUSFJFQURfQ0hBTk5FTFMgPSBcInRocmVhZENoYW5uZWxzXCIsXG5cdFJPTEUgPSBcInJvbGVcIixcblx0Uk9MRVMgPSBcInJvbGVzXCIsXG5cdEVNT0pJID0gXCJlbW9qaVwiLFxuXHRFTU9KSVMgPSBcImVtb2ppc1wiLFxuXHRHVUlMRCA9IFwiZ3VpbGRcIixcblx0R1VJTERTID0gXCJndWlsZHNcIixcblx0TUVTU0FHRSA9IFwibWVzc2FnZVwiLFxuXHRHVUlMRF9NRVNTQUdFID0gXCJndWlsZE1lc3NhZ2VcIixcblx0UkVMRVZBTlRfTUVTU0FHRSA9IFwicmVsZXZhbnRNZXNzYWdlXCIsXG5cdElOVklURSA9IFwiaW52aXRlXCIsXG5cdFVTRVJfTUVOVElPTiA9IFwidXNlck1lbnRpb25cIixcblx0TUVNQkVSX01FTlRJT04gPSBcIm1lbWJlck1lbnRpb25cIixcblx0Q0hBTk5FTF9NRU5USU9OID0gXCJjaGFubmVsTWVudGlvblwiLFxuXHRST0xFX01FTlRJT04gPSBcInJvbGVNZW50aW9uXCIsXG5cdEVNT0pJX01FTlRJT04gPSBcImVtb2ppTWVudGlvblwiLFxuXHRDT01NQU5EX0FMSUFTID0gXCJjb21tYW5kQWxpYXNcIixcblx0Q09NTUFORCA9IFwiY29tbWFuZFwiLFxuXHRJTkhJQklUT1IgPSBcImluaGliaXRvclwiLFxuXHRMSVNURU5FUiA9IFwibGlzdGVuZXJcIixcblx0VEFTSyA9IFwidGFza1wiLFxuXHRDT05URVhUX01FTlVfQ09NTUFORCA9IFwiY29udGV4dE1lbnVDb21tYW5kXCJcbn1cbmV4cG9ydCBlbnVtIEFrYWlyb0hhbmRsZXJFdmVudHMge1xuXHRMT0FEID0gXCJsb2FkXCIsXG5cdFJFTU9WRSA9IFwicmVtb3ZlXCJcbn1cbmV4cG9ydCBlbnVtIENvbW1hbmRIYW5kbGVyRXZlbnRzIHtcblx0Q09NTUFORF9CTE9DS0VEID0gXCJjb21tYW5kQmxvY2tlZFwiLFxuXHRDT01NQU5EX0JSRUFLT1VUID0gXCJjb21tYW5kQnJlYWtvdXRcIixcblx0Q09NTUFORF9DQU5DRUxMRUQgPSBcImNvbW1hbmRDYW5jZWxsZWRcIixcblx0Q09NTUFORF9GSU5JU0hFRCA9IFwiY29tbWFuZEZpbmlzaGVkXCIsXG5cdENPTU1BTkRfSU5WQUxJRCA9IFwiY29tbWFuZEludmFsaWRcIixcblx0Q09NTUFORF9MT0NLRUQgPSBcImNvbW1hbmRMb2NrZWRcIixcblx0Q09NTUFORF9TVEFSVEVEID0gXCJjb21tYW5kU3RhcnRlZFwiLFxuXHRDT09MRE9XTiA9IFwiY29vbGRvd25cIixcblx0RVJST1IgPSBcImVycm9yXCIsXG5cdElOX1BST01QVCA9IFwiaW5Qcm9tcHRcIixcblx0TUVTU0FHRV9CTE9DS0VEID0gXCJtZXNzYWdlQmxvY2tlZFwiLFxuXHRNRVNTQUdFX0lOVkFMSUQgPSBcIm1lc3NhZ2VJbnZhbGlkXCIsXG5cdE1JU1NJTkdfUEVSTUlTU0lPTlMgPSBcIm1pc3NpbmdQZXJtaXNzaW9uc1wiLFxuXHRTTEFTSF9CTE9DS0VEID0gXCJzbGFzaEJsb2NrZWRcIixcblx0U0xBU0hfRVJST1IgPSBcInNsYXNoRXJyb3JcIixcblx0U0xBU0hfRklOSVNIRUQgPSBcInNsYXNoRmluaXNoZWRcIixcblx0U0xBU0hfTUlTU0lOR19QRVJNSVNTSU9OUyA9IFwic2xhc2hNaXNzaW5nUGVybWlzc2lvbnNcIixcblx0U0xBU0hfTk9UX0ZPVU5EID0gXCJzbGFzaE5vdEZvdW5kXCIsXG5cdFNMQVNIX1NUQVJURUQgPSBcInNsYXNoU3RhcnRlZFwiLFxuXHRTTEFTSF9PTkxZID0gXCJzbGFzaE9ubHlcIlxufVxuZXhwb3J0IGVudW0gQ29udGV4dENvbW1hbmRIYW5kbGVyRXZlbnRzIHtcblx0RVJST1IgPSBcImVycm9yXCIsXG5cdEZJTklTSEVEID0gXCJmaW5pc2hlZFwiLFxuXHROT1RfRk9VTkQgPSBcIm5vdEZvdW5kXCIsXG5cdFNUQVJURUQgPSBcInN0YXJ0ZWRcIixcblx0QkxPQ0tFRCA9IFwiYmxvY2tlZFwiXG59XG5leHBvcnQgZW51bSBCdWlsdEluUmVhc29ucyB7XG5cdENMSUVOVCA9IFwiY2xpZW50XCIsXG5cdEJPVCA9IFwiYm90XCIsXG5cdE9XTkVSID0gXCJvd25lclwiLFxuXHRTVVBFUl9VU0VSID0gXCJzdXBlclVzZXJcIixcblx0R1VJTEQgPSBcImd1aWxkXCIsXG5cdERNID0gXCJkbVwiLFxuXHRBVVRIT1JfTk9UX0ZPVU5EID0gXCJhdXRob3JOb3RGb3VuZFwiLFxuXHROT1RfTlNGVyA9IFwibm90TnNmd1wiXG59XG4iXX0=